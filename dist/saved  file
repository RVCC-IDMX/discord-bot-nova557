import { MessageEmbed } from "discord.js"

module.exports = {
import: {MessageEmbed} ,
  name: 'weather',
  description: "The weather report",
  execute(message: { channel: { send: (arg0: string) => void } }, args: any[], Discord: { MessageEmbed: new () => { (): any; new(): any; setTitle: { (arg0: string): { (): any; new(): any; setDescription: { (arg0: any): { (): any; new(): any; setThumbnail: { (arg0: any): { (): any; new(): any; setColor: { (arg0: string): { (): any; new(): any; setTimestamp: { (): { (): any; new(): any; addField: { (arg0: string, arg1: any, arg2: boolean): { (): any; new(): any; addField: { (arg0: string, arg1: any, arg2: boolean): { (): any; new(): any; addField: { (arg0: string, arg1: string, arg2: boolean): { (): any; new(): any; addField: { (arg0: string, arg1: string, arg2: boolean): { (): any; new(): any; setFooter: { (arg0: string): any; new(): any } }; new(): any } }; new(): any } }; new(): any } }; new(): any } }; new(): any } }; new(): any } }; new(): any } }; new(): any } }; new(): any } } }, weather: { find: (arg0: { search: any; degreeType: string }) => any }) {

    const city = args[0];


    weather.find({search: args.join(" "), degreeType: "C"}), function(error: any, result: string | any[]){

      if (error) return message.channel.send(error)
      if (!city) return message.channel.send("You didn't enter the name of the place of which you want to get the weather.")

      if (result === undefined || result.length === 0)
      return message.channel.send("You didn't specify a valid location")

      let current = result[0].current
      let location = result[0].location

      let embed = new Discord.MessageEmbed()
      .setTitle(`Showing the Weather Info for ${current.observationpoint}`)
      .setDescription(current.skytext)
      .setThumbnail(current.imageURL)
      .setColor("#3cb043")
      .setTimestamp()
      .addField("Temperature: ", current.temperature = "C", true)
      .addField("Wind Speed: ", current.winddisplay, true)
      .addField("Humidity: ", `${current.humidity}%`, true)
      .addField("Timezone: ", `UTC${location.timezone}`, true)
      .setFooter("Weather Command")
      console.log(MessageEmbed);
      message.channel.send(embed)

    }

  }
}

_____________________________________

const { MessageEmbed } = require('discord.js')
const fetch = require('axios')
const key = "a339e0ecc3070f6c8aed35fd166769e8"

module.exports.run = async (Client: any, _inter: any) => {
    let loc = await fetch(`https://api.ultrax-yt.com/v1/weather?query=${loc}&key=${key}`)

    const embed = new MessageEmbed()
    .setTitle(`Weather || ${data.location.name}`)
    .addField(`Region`, `${data.location.region}`, true)
    .addField(`Country`, `${data.location.country}`, true)
    .addField(`Local Time`, `${data.location.localtime}`, true)
    .addField(`Last Update`, `${data.weather.last_update}`, true)
    .addField(`Temperature`, `${data.weather.temperature_c}C - ${data.weather.temperature_f}F`, true)
    .addField(`Feels like`, `${data.weather.tmep_feels_like_c}C - ${data.weather.temp_feels_like_f}F`, true)
    .addField(`Wind Speed`, `${data.weather.air.wind_kph}KPH - ${data.air.wind_mph}MPH`, true)
    .addField(`Wind Direction`, `${data.air.wind_direction}`, true)

    MessageEmbed.reply({embeds: [embed]})
}

module.exports.help = {
    name: 'weather'
}
________________________

const Discord = require('discord.js');
const client = new Discord.Client();
const { prefix, token, apitoken } = require('./config.json');
const axios = require('axios')

client.once('ready', () => {
    console.log('Ready!');
});



const exampleEmbed = (
	temp: number,
	maxTemp: any,
	minTemp: any,
	pressure: any,
	humidity: any,
	wind: any,
	cloudness: any,
	icon: any,
	author: any,
	profile: any,
	cityName: any,
	country: any
) =>
	new Discord.RichEmbed()
		.setColor('#0099ff')
		.setAuthor(`Hello, ${author}`, profile)
		.setTitle(`There is ${temp}\u00B0 C in ${cityName}, ${country}`)
		.addField(`Maximum Temperature:`, `${maxTemp}\u00B0 C`, true)
		.addField(`Minimum Temperature:`, `${minTemp}\u00B0 C`, true)
		.addField(`Humidity:`, `${humidity} %`, true)
		.addField(`Wind Speed:`, `${wind} m/s`, true)
		.addField(`Pressure:`, `${pressure} hpa`, true)
		.addField(`Cloudiness:`, `${cloudness}`, true)
		.setThumbnail(`http://openweathermap.org/img/w/${icon}.png`)
		.setFooter('Made With ğŸ’– by @Uddesh');


const helpEmbed = () =>
    new Discord.RichEmbed()
        .setColor('#0099ff')
        .addField("Use '#w (City Name)' to get weather information", "For Example '#w london'", true)
        .addBlankField()
        .addField("Use '#ping' or '#beep'", 'Try it.', true)
        .addBlankField()
        .addField("Use '#server-info' to get informatin about server", "For Example '#server-info'", true)
        .addBlankField()
        .addField("Use '#user-info' to get informatin about your profile", "For Example '#user-info'", true)
        .addBlankField()
        .setFooter('Made with ğŸ’– by @Uddesh');


client.on('message', (message: { content: string; author: { bot: any; username: string; id: string; displayAvatarURL: any; }; reply: (arg0: string) => void; channel: { send: (arg0: string) => void; }; guild: { name: string; memberCount: string; }; }) => {
    if (!message.content.startsWith(prefix) || message.author.bot) return;
    const args = message.content.slice(prefix.length).split(' ');
    const command = args.shift().toLowerCase();
    if (message.content === prefix + 'ping') {
        message.reply('Ping-Pong!');
    } else if (message.content === prefix + 'help') {
        message.channel.send(helpEmbed());
    }
    else if (message.content === prefix + 'beep') {
        message.reply('Beep-Boop!');
    } else if (message.content === prefix + 'server-info') {
        message.channel.send('Guild name: ' + message.guild.name + '\nTotal members: ' + message.guild.memberCount);
    } else if (message.content === prefix + 'user-info') {
        message.channel.send('Your username: ' + message.author.username + '\nYour ID: ' + message.author.id);
    }
    else if (command === 'w' || 'weather') {
        axios
            .get(
                `https://api.openweathermap.org/data/2.5/weather?q=${args}&units=metric&appid=${apitoken}`
            )
            .then((response: any) => {
                let apiData = response;
                let currentTemp = Math.ceil(apiData.data.main.temp)
                let maxTemp = apiData.data.main.temp_max;
                let minTemp = apiData.data.main.temp_min;
                let humidity = apiData.data.main.humidity;
                let wind = apiData.data.wind.speed;
                let author = message.author.username
                let profile = message.author.displayAvatarURL
                let icon = apiData.data.weather[0].icon
                let cityName = args
                let country = apiData.data.sys.country
                let pressure = apiData.data.main.pressure;
                let cloudness = apiData.data.weather[0].description;
                message.channel.send(exampleEmbed(currentTemp, maxTemp, minTemp, pressure, humidity, wind, cloudness, icon, author, profile, cityName, country));
            }).catch((err: any) => {
                message.reply(`Enter a vailid city name`)
            })
    }
}
)

client.login(token);
